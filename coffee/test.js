// Generated by CoffeeScript 1.10.0
(function() {
  var list_view, todo,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  todo = Backbone.View({
    el: $('body'),
    initialize: function() {
      _.bindAll(this);
      this.counter = 0;
      return this.render();
    },
    render: function() {
      $(this.el).append('<button>Add List Item</button>');
      return $(this.el).append('<ul></ul>');
    },
    addItem: function() {
      this.counter++;
      return $('ul').append("<li>Hello, Backbone " + this.counter + "!</li>");
    },
    events: {
      'click button': 'addItem'
    }
  });

  list_view = new ListView;


  /*
  sl;dgms
   */


  /*
   */

  jQuery(function() {
    var ListView;
    ListView = (function(superClass) {
      extend(<Li>                                                                                                                                     </Li>stView, superClass);

      function ListView() {
        return ListView.__super__.constructor.apply(this, arguments);
      }

      ListView.prototype.el = $('body');

      ListView.prototype.initialize = function() {
        _.bindAll(this);
        this.counter = 0;
        return this.render();
      };

      ListView.prototype.render = function() {
        $(this.el).append('<button>Add List Item</button>');
        return $(this.el).append('<ul></ul>');
      };

      ListView.prototype.addItem = function() {
        this.counter++;
        return $('ul').append("<li>Hello, Backbone " + this.counter + "!</li>");
      };

      ListView.prototype.events = {
        'click button': 'addItem'
      };

      return ListView;

    })(Backbone.View);
    return list_view = new ListView;
  });

}).call(this);
